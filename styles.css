@import url('https://fonts.googleapis.com/css?family=Libre+Baskerville|Nunito:900&display=swap');

* {
  box-sizing: border-box;
}
body {
  margin: 0;
  padding: 0;
  font-family: 'Libre Baskerville', serif;
  font-size: 16px;
}
h1 {
  font-family: Nunito, sans-serif;
  margin: 0;
}
img {
  max-width: 100%;
}
p {
  margin-top: 0;
}
p + p {
  margin-top: 1em;
}

header {
  position: relative;
  color: #fff;
  background: red;
  margin-bottom: 6rem;
  padding: 3rem 2rem 0 2rem;
}
header:after {
  content: ' ';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  height: calc(100% + 3rem);
  width: 100%;
  background: red;
  z-index: -1;
  transform: skewY(-5deg);
}
h1 {
  word-spacing: 10000px;
  font-size: 3rem;
  line-height: 1em;
}
h2 {
  font-family: 'Libre Baskerville', serif;
}
@media (min-width: 900px) {
  body {
    font-size: 20px;
  }
  header {
    padding: 4rem 3rem 0 3rem;
    margin-bottom: 10rem;
  }
  h1 {
    font-size: 6rem;
  }
}
@media (min-width: 1150px) {
  body {
    font-size: 24px;
  }
  header {
    margin-bottom: 14rem;
  }
  h1 {
    font-size: 9rem;
  }
  h2 {
    font-size: 3rem;
  }
}

main {
  padding: 0 2rem;
}
@media (min-width: 900px) {
  main {
    padding: 0 3rem;
    max-width: 80rem;
    display: grid;
    grid-template-columns: 2fr 2fr;
    gap: 3rem;
  }
}

figure {
  position: relative;
  margin: 0 0 2rem 0;
  overflow: hidden;
}
figure img {
  width: 100%;
}
figure:after {
  content: ' ';
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 2.5rem;
  background: red;
}
figure:before {
  content: ' ';
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 3.5rem;
  background: red;
  transform: skewY(3deg);
}
figcaption {
  position: absolute;
  bottom: 0;
  left: 0;
  padding: 0 2rem 1rem 2rem;
  font-family: Nunito, sans-serif;
  font-size: 1.5rem;
  color: #fff;
  z-index: 1;
}

@media (min-width: 900px) {
  header:after {
    transform: skewY(-4deg);
  }
}
@media (min-width: 1200px) {
  header:after {
    transform: skewY(-3deg);
  }
}
